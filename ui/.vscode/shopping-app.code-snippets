{		
	"Input with placeholder X": {
		"prefix": "inpx",
		"body": [
			"<input type='${text}' placeholder='${title}' name='${title}' />"
		],
		"description": "Input with placeholder"
	},
	"For Loop X": {
		"prefix": "forx",
		"body": [
				"for (var ${index} = 0; ${index} < ${array}.length; ${index}++) {",
				"\tvar ${element} = ${array}[${index}];",
				"\t$0",
				"}"
		],
		"description": "For Loop x"
	},
	"Use State X": {
		"prefix": "usxx",
		"body": [
			"const [ ${1}, set${1/(.*)/${1:/capitalize}/} ] = useState(${2});",
			"${3}"		
		],
		"description": "Use State Extended :)"
	},
	"Use Handle Button click or Input change X": {
		"prefix": "conx",
		"body": [
			"const handle${1/(.*)/${1:/capitalize}/} = (e) => { ",
			"\ttry {",
			"\t\te.preventDefault();",
			"\t\t${2}",
			"\t} catch (error) {",
			"\t\tconsole.log(error);",
			"\t}",
			"}",
			""		
		],
		"description": "Use Handle Button click or Input change X"
	},
	"My constant": {
		"prefix": "cony",
		"body": [
			"const ${1} = (${2}) => { ",
			"\ttry {",			
			"\t\t${3}",
			"\t} catch (error) {",
			"\t\tconsole.log(error);",
			"\t}",
			"}",
			"${4}"		
		],
		"description": "My constant"
	},
	"Arrow function with import scss": {
		"prefix": "raxx",
		"body": [
			"import './${1}.scss';",
			"const ${1/(.*)/${1:/capitalize}/} = () => {",
			"\treturn (",
			"\t\t<div className='${1}'>",
			"\t\t\t<h1> ${1/(.*)/${1:/capitalize}/} </h1>",
			"\t\t\t${2}",
			"\t\t</div>",
			"\t)",
			"}",
			"export default ${1/(.*)/${1:/capitalize}/};"
		],
		"description": "Arrow function with import scss"
	},
	"React console log": {
		"prefix": "logx",
		"body": [
			"console.log($1);",
			"$2"
		],
		"description": "Simple console log"
	},
	"Try catch sample": {
		"prefix": "trxx",
		"body": [
			"try {",
			"\t$1",			
			"} catch (err) {",
			"\tconsole.log(err);",
			"}",
			"$2"
		],
		"description": "Try catch sample"
	},
	"Handle click v2": {
		"prefix": "hanx",
		"body": [
			"const handle${1/(.*)/${1:/capitalize}/} = (${2}) => { ",
			"\ttry {",			
			"\t\t${3}",
			"\t} catch (error) {",
			"\t\tconsole.log(error);",
			"\t}",
			"}",
			""		
		],
		"description": "Handle click v2"
	},
	"Use effect": {
		"prefix": "usxe",
		"body": [
			"useEffect(() => {",
			"\t${1}",		
			"}, [${2}])",
			"${3}"
		],
		"description": "User effect"
	}
}